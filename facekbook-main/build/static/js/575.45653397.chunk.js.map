{"version":3,"file":"static/js/575.45653397.chunk.js","mappings":"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","sources":["components/home/stories/StoryDetailsPage.js"],"sourcesContent":["import React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Stories from \"react-insta-stories\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nfunction StoryDetailsPage(props) {\n  const [queuedStories, setQueuedStories] = useState([]);\n  const storedStories = localStorage.getItem(\"userStories\");\n  const [storiesGroupedByUser, setStoriesGroupedByUser] = useState([]);\n  const [currentStory, setCurrentStory] = useState(null);\n  const [remainingGroupsIndices, setRemainingGroupsIndices] = useState([]);\n  const [currentPostId, setCurrentPostId] = useState(null);\n  const convertedStories = storedStories ? JSON.parse(storedStories) : [];\n  const navigate = useNavigate();\n  const { postId } = useParams();\n\n  const onAllStoriesEndHandler = () => {\n    console.log(\"stories ended\");\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get(\n        \"http://localhost:8000/api/v1/stories/getAllStories\"\n      );\n      setQueuedStories(result.data.stories);\n    };\n\n    fetchData();\n  }, []);\n  console.log(\"queuedStories\", queuedStories);\n  const containerStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n  };\n\n  const groupStoriesByUser = () => {\n    const groupedStories = queuedStories.reduce((groups, story) => {\n      const userId = story.user._id;\n      const userIndex = groups.findIndex((group) => group.userId === userId);\n\n      if (userIndex === -1) {\n        // Nếu chưa có nhóm câu chuyện cho người dùng này, tạo một nhóm mới\n        groups.push({ userId, stories: [story] });\n      } else {\n        // Ngược lại, thêm câu chuyện vào mảng của người dùng tương ứng\n        groups[userIndex].stories.push(story);\n      }\n\n      return groups;\n    }, []);\n\n    return groupedStories;\n  };\n\n  useEffect(() => {\n    const groupedStories = groupStoriesByUser();\n    setStoriesGroupedByUser(groupedStories);\n  }, [queuedStories]);\n  console.log(\"storiesGroupedByUser\", storiesGroupedByUser);\n\n  useEffect(() => {\n    setRemainingGroupsIndices(\n      Array.from({ length: storiesGroupedByUser.length }, (_, index) => index)\n    );\n  }, [storiesGroupedByUser]);\n\n  const handleButtonClick = () => {\n    // Kiểm tra nếu tất cả các nhóm câu chuyện đã được hiển thị\n    if (remainingGroupsIndices.length === 0) {\n      navigate(\"/\");\n      setRemainingGroupsIndices(\n        Array.from({ length: storiesGroupedByUser.length }, (_, index) => index)\n      );\n      return;\n    }\n\n    let randomGroup;\n    let randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * remainingGroupsIndices.length);\n      const randomGroupIndex = remainingGroupsIndices[randomIndex];\n      randomGroup = storiesGroupedByUser[randomGroupIndex];\n    } while (\n      randomGroup &&\n      randomGroup.stories.length > 0 &&\n      randomGroup.userId === postId\n    );\n\n    if (randomGroup && randomGroup.stories.length > 0) {\n      // Cập nhật câu chuyện hiện tại là tất cả các câu chuyện của nhóm này\n      setCurrentStory(randomGroup.stories);\n      // Loại bỏ nhóm câu chuyện này khỏi danh sách chưa hiển thị\n      setRemainingGroupsIndices(\n        remainingGroupsIndices.filter((_, index) => index !== randomIndex)\n      );\n    }\n  };\n\n  console.log(\"currentStory\", currentStory);\n  function convertStoriesToInstaStories(stories) {\n    return stories.map((story) => ({\n      url: story.content,\n      header: {\n        heading: story.user.fullName,\n        profileImage: story.user.photo,\n      },\n      duration: 1500,\n      seeMore: ({ close }) => {\n        return <div onClick={close}>Hello, click to close this.</div>;\n      },\n    }));\n  }\n\n  const [instaStory, setInstaStory] = useState(null);\n\n  useEffect(() => {\n    if (currentStory) {\n      const convertedStory = convertStoriesToInstaStories(currentStory);\n      setInstaStory(convertedStory);\n    }\n  }, [currentStory]);\n\n  console.log(\"currentStory\", currentStory);\n  const storyContent = {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    margin: \"auto\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  };\n\n  const closeButtonStyle = {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"10px\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: \"50%\",\n    width: \"50px\",\n    height: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  };\n  const nextButtonStyle = {\n    position: \"absolute\",\n    bottom: \"50%\",\n    right: \"35%\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: \"50%\",\n    width: \"50px\",\n    height: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  };\n  const handleCloseButtonClick = () => {\n    navigate(\"/\");\n  };\n  console.log(\"instaStory\", instaStory);\n  return (\n    <React.Fragment>\n      <div style={containerStyle}>\n        <div style={closeButtonStyle} onClick={handleCloseButtonClick}>\n          <span>x</span>\n        </div>\n        <div style={nextButtonStyle} onClick={handleButtonClick}>\n          <span>&gt;</span>\n        </div>\n        {!instaStory && (\n          <Stories\n            stories={convertedStories.map((story) => ({\n              ...story,\n              storyStyles: storyContent,\n            }))}\n            defaultInterval={1500}\n            width={\"calc(80vh * 9 / 16)\"}\n            height={\"80vh\"}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              background: \"transparent\",\n              cursor: \"pointer\",\n              backgroundColor: \"white\",\n              borderRadius: \"30px\",\n            }}\n            loop={false}\n            keyboardNavigation={true}\n            isPaused={() => {}}\n            currentIndex={() => {}}\n            onStoryStart={() => {}}\n            onStoryEnd={() => {}}\n            onAllStoriesEnd={onAllStoriesEndHandler}\n            storyStyles={{\n              ...storyContent,\n              background: \"cover\",\n            }}\n          />\n        )}\n        {instaStory && (\n          <Stories\n            stories={instaStory.map((story) => ({\n              ...story,\n              storyStyles: storyContent,\n            }))}\n            defaultInterval={1500}\n            width={\"calc(80vh * 9 / 16)\"}\n            height={\"80vh\"}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              background: \"transparent\",\n              cursor: \"pointer\",\n              backgroundColor: \"white\",\n              borderRadius: \"30px\",\n            }}\n            loop={false}\n            keyboardNavigation={true}\n            isPaused={() => {}}\n            currentIndex={() => {}}\n            onStoryStart={() => {}}\n            onStoryEnd={() => {}}\n            onAllStoriesEnd={onAllStoriesEndHandler}\n            storyStyles={{\n              ...storyContent,\n              background: \"cover\",\n            }}\n          />\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default StoryDetailsPage;\n"],"names":["props","useState","queuedStories","setQueuedStories","storedStories","localStorage","getItem","storiesGroupedByUser","setStoriesGroupedByUser","currentStory","setCurrentStory","remainingGroupsIndices","setRemainingGroupsIndices","convertedStories","JSON","parse","navigate","useNavigate","postId","useParams","onAllStoriesEndHandler","console","log","useEffect","fetchData","axios","result","data","stories","groupedStories","reduce","groups","story","userId","user","_id","userIndex","findIndex","group","push","Array","from","length","_","index","instaStory","setInstaStory","convertedStory","map","url","content","header","heading","fullName","profileImage","photo","duration","seeMore","close","onClick","storyContent","width","maxWidth","maxHeight","margin","height","objectFit","style","display","justifyContent","alignItems","position","top","left","backgroundColor","borderRadius","cursor","bottom","right","randomGroup","randomIndex","Math","floor","random","randomGroupIndex","filter","storyStyles","defaultInterval","background","loop","keyboardNavigation","isPaused","currentIndex","onStoryStart","onStoryEnd","onAllStoriesEnd"],"sourceRoot":""}